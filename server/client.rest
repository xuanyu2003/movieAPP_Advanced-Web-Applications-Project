### Get posts 
GET http://localhost:3001

### Login with valid credentials 
POST http://localhost:3001/user/login
Content-Type: application/json

{ "users_email":"user05@example.com", 
"users_password":"newPassword" }

### Login with invalid credentials 
POST http://localhost:3001/user/login 
Content-Type: application/json

{ "users_email":"user@example.com", 
  "users_password":"wrongpassword"
   }

### Registration 
POST http://localhost:3001/user/register 
Content-Type: application/json

{
  "users_email": "user05@example.com",
  "users_password": "Password"
}


### resetpassword
POST http://localhost:3001/user/resetpassword
Content-Type: application/json

{
  "users_email": "user05@example.com",
  "users_id":3,
  "new_password": "newPassword"
}

### Delete Account with a Valid User ID
DELETE http://localhost:3001/user/deleteAccount/2
Content-Type: application/json


### Reset Password
POST http://localhost:3001/user/resetPassword
Content-Type: application/json

{
  "email": "user01@example.com",
  "password": "newStrongPassword"
}


### Review listing
GET  http://localhost:3001/reviews
Content-Type: application /json

{
  "review_rating": 5,
  "review_text": "This movie was fantastic!",
  "review_created_at": "2024-11-13T08:14:39.966Z",
  "review_users_id": "1",
  "review_movie_id": "2435",
  "review_users_email": "mike.milson@gmail.com"
}

### Listing a single review
GET http://localhost:3001/reviews/review
Content-Type: application /json

{
  "review_rating": 5,
  "review_text": "This movie was fantastic!",
  "review_created_at": "2024-11-13T08:14:39.966Z",
  "review_users_id": "1",
  "review_movie_id": "2435",
  "review_users_email": "mike.milson@gmail.com"
}

### Review creation
POST http://localhost:3001/reviews/create
Content-Type: application /json

{
  "review_users_id": "1" ,
  "review_users_email": "mike.milson@gmail.com" ,
  "review_movie_id": "2435",
  "review_text": "This movie was epic",
  "review_rating": "5",
  "review_created_at": "2024-11-13T08:14:39.966Z" 
}



### Get userspage
GET http://localhost:3001/userpage/?users_id=1
Content-Type: application/json

### Test adding a favorite
POST http://localhost:3001/movie/addFavorite/
Content-Type: application/json

{
    "users_id": 1,
    "movie_id": 12
}

### Get all groups
GET http://localhost:3001/groups
Content-Type: application/json
{
  "usergroup.group_id": 1
  "usergroup.group_name": movie maniacs,
  "usergroup.group_owner_id": 2,
  "usergroup.group_users_id": 3,
  "usergroup.group_introduction:" "we love movies"
}

### Test - Get Groups for a Specific User
GET http://localhost:3001/notification/group/user/1
Accept: application/json


### Create a Group
POST http://localhost:3001/groups/creategroup
Content-Type: application/json

{
    "group_name": "getgrouptest14",
    "group_users_id": 1, 
    "group_owner_id": 1
}

### Test : Successful request to join a group
POST http://localhost:3001/notification/group_id/5/join
Content-Type: application/json

{
  "users_id":1
  }

### Accept a join request (change status to 'active')
PUT http://localhost:3001/notification/group_id/5/requests/4
Content-Type: application/json

{
    "groupmember_status": "active",  
    "users_id": 2
}


### Reject a join request (change status to 'inactive')
PUT http://localhost:3001/notification/group_id/8/requests/10
Content-Type: application/json

{
    "groupmember_status": "inactive",  
    "users_id": 1 
}


### Fetch notifications for a specific user
GET http://localhost:3001/notification/users/2
Accept: application/json


### Reset Password Test - Success Case
POST http://localhost:3001/user/resetPassword
Content-Type: application/json

{
    "email": "dwd@gmail.com",
    "password": "newpassword"
}

### Retrieve all members of a group
GET http://localhost:3001/groups/group_id/1/members
Content-Type: application/json

### Delete a group
DELETE http://localhost:3001/groups/10
Content-Type: application/json

### Remove Group Member (Valid Owner, Member Exists)
DELETE http://localhost:3001/groups/13/member/1
Content-Type: application/json

{
    "user_id": 5
}

### Leave Group (for a member who is not the owner)
DELETE http://localhost:3001/groups/leave/13/member/1
Content-Type: application/json

{
  "user_id": 1
}

# Get group reviews
GET http://localhost:3001/groups/:id/reviews
Content-Type: application/json

{
  "groupmoviereview.groupmoviereview_id": 2,
  "groupmoviereview.groupmoviereview_movie_id" 32145:,
  "groupmoviereview.groupmoviereview_review": "it was good",
  "users.users_email AS groupmoviereview_user: user@email.com"
}